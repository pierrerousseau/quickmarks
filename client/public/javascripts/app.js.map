{"version":3,"file":"public/javascripts/app.js","sources":["app/collections/bookmark_collection.coffee","app/initialize.coffee","app/lib/app_helpers.coffee","app/lib/view.coffee","app/lib/view_collection.coffee","app/models/bookmark.coffee","app/routers/app_router.coffee","app/views/app_view.coffee","app/views/bookmark_view.coffee","app/views/bookmarks_view.coffee","app/views/templates/bookmark.jade","app/views/templates/home.jade"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhzIA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlrQA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA;;A,CCAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;A","sourcesContent":["var Bookmark, BookmarkCollection,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nBookmark = require('../models/bookmark');\n\nmodule.exports = BookmarkCollection = (function(superClass) {\n  extend(BookmarkCollection, superClass);\n\n  BookmarkCollection.prototype.model = Bookmark;\n\n  BookmarkCollection.prototype.url = 'bookmarks';\n\n  function BookmarkCollection(view) {\n    this.view = view;\n    BookmarkCollection.__super__.constructor.call(this);\n    this.bind(\"add\", this.view.renderOne);\n    this.bind(\"reset\", this.view.renderAll);\n  }\n\n  return BookmarkCollection;\n\n})(Backbone.Collection);\n","if (this.CozyApp == null) {\n  this.CozyApp = {};\n}\n\nif (CozyApp.Routers == null) {\n  CozyApp.Routers = {};\n}\n\nif (CozyApp.Views == null) {\n  CozyApp.Views = {};\n}\n\nif (CozyApp.Models == null) {\n  CozyApp.Models = {};\n}\n\nif (CozyApp.Collections == null) {\n  CozyApp.Collections = {};\n}\n\n$(function() {\n  var AppView;\n  require('../lib/app_helpers');\n  CozyApp.Views.appView = new (AppView = require('views/app_view'));\n  CozyApp.Views.appView.render();\n  return Backbone.history.start({\n    pushState: true\n  });\n});\n","(function() {\n  return (function() {\n    var console, dummy, method, methods, results;\n    console = window.console = window.console || {};\n    method = void 0;\n    dummy = function() {};\n    methods = 'assert,count,debug,dir,dirxml,error,exception, group,groupCollapsed,groupEnd,info,log,markTimeline, profile,profileEnd,time,timeEnd,trace,warn'.split(',');\n    results = [];\n    while (method = methods.pop()) {\n      results.push(console[method] = console[method] || dummy);\n    }\n    return results;\n  })();\n})();\n","var View,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = View = (function(superClass) {\n  extend(View, superClass);\n\n  function View() {\n    return View.__super__.constructor.apply(this, arguments);\n  }\n\n  View.prototype.tagName = 'section';\n\n  View.prototype.template = function() {};\n\n  View.prototype.initialize = function() {\n    return this.render();\n  };\n\n  View.prototype.getRenderData = function() {\n    var ref;\n    return {\n      model: (ref = this.model) != null ? ref.toJSON() : void 0\n    };\n  };\n\n  View.prototype.render = function() {\n    this.beforeRender();\n    this.$el.html(this.template());\n    this.afterRender();\n    return this;\n  };\n\n  View.prototype.beforeRender = function() {};\n\n  View.prototype.afterRender = function() {};\n\n  View.prototype.destroy = function() {\n    this.undelegateEvents();\n    this.$el.removeData().unbind();\n    this.remove();\n    return Backbone.View.prototype.remove.call(this);\n  };\n\n  View.confirm = function(text, cb) {\n    return $(function() {\n      return (new PNotify({\n        \"text\": text,\n        \"icon\": false,\n        \"hide\": false,\n        \"type\": \"info\",\n        \"confirm\": {\n          \"confirm\": true\n        },\n        \"buttons\": {\n          \"sticker\": false\n        },\n        \"width\": \"40%\"\n      })).get().on(\"pnotify.confirm\", function() {\n        return cb();\n      });\n    });\n  };\n\n  View.error = function(text) {\n    return $(function() {\n      return new PNotify({\n        \"text\": text,\n        \"icon\": false,\n        \"hide\": false,\n        \"type\": \"error\",\n        \"buttons\": {\n          \"sticker\": false\n        }\n      });\n    });\n  };\n\n  View.log = function(text) {\n    return $(function() {\n      return new PNotify({\n        \"text\": text,\n        \"icon\": false,\n        \"opacity\": .8,\n        \"delay\": 2000,\n        \"type\": \"success\",\n        \"buttons\": {\n          \"sticker\": false\n        }\n      });\n    });\n  };\n\n  return View;\n\n})(Backbone.View);\n","var View, ViewCollection, methods,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nView = require('./view');\n\nViewCollection = (function(superClass) {\n  extend(ViewCollection, superClass);\n\n  function ViewCollection() {\n    this.renderAll = bind(this.renderAll, this);\n    this.renderOne = bind(this.renderOne, this);\n    return ViewCollection.__super__.constructor.apply(this, arguments);\n  }\n\n  ViewCollection.prototype.collection = new Backbone.Collection();\n\n  ViewCollection.prototype.view = new View();\n\n  ViewCollection.prototype.views = [];\n\n  ViewCollection.prototype.length = function() {\n    return this.views.length;\n  };\n\n  ViewCollection.prototype.add = function(views, options) {\n    var i, len, view;\n    if (options == null) {\n      options = {};\n    }\n    views = _.isArray(views) ? views.slice() : [views];\n    for (i = 0, len = views.length; i < len; i++) {\n      view = views[i];\n      if (!this.get(view.cid)) {\n        this.views.push(view);\n        if (!options.silent) {\n          this.trigger('add', view, this);\n        }\n      }\n    }\n    return this;\n  };\n\n  ViewCollection.prototype.get = function(cid) {\n    return this.find(function(view) {\n      return view.cid === cid;\n    }) || null;\n  };\n\n  ViewCollection.prototype.remove = function(views, options) {\n    var i, len, view;\n    if (options == null) {\n      options = {};\n    }\n    views = _.isArray(views) ? views.slice() : [views];\n    for (i = 0, len = views.length; i < len; i++) {\n      view = views[i];\n      this.destroy(view);\n      if (!options.silent) {\n        this.trigger('remove', view, this);\n      }\n    }\n    return this;\n  };\n\n  ViewCollection.prototype.destroy = function(view, options) {\n    var _views;\n    if (view == null) {\n      view = this;\n    }\n    if (options == null) {\n      options = {};\n    }\n    _views = this.filter(_view)(function() {\n      return view.cid !== _view.cid;\n    });\n    this.views = _views;\n    view.undelegateEvents();\n    view.$el.removeData().unbind();\n    view.remove();\n    Backbone.View.prototype.remove.call(view);\n    if (!options.silent) {\n      this.trigger('remove', view, this);\n    }\n    return this;\n  };\n\n  ViewCollection.prototype.reset = function(views, options) {\n    var i, j, len, len1, ref, view;\n    if (options == null) {\n      options = {};\n    }\n    views = _.isArray(views) ? views.slice() : [views];\n    ref = this.views;\n    for (i = 0, len = ref.length; i < len; i++) {\n      view = ref[i];\n      this.destroy(view, options);\n    }\n    if (views.length !== 0) {\n      for (j = 0, len1 = views.length; j < len1; j++) {\n        view = views[j];\n        this.add(view, options);\n      }\n      if (!options.silent) {\n        this.trigger('reset', view, this);\n      }\n    }\n    return this;\n  };\n\n  ViewCollection.prototype.renderOne = function(model) {\n    var view;\n    view = new this.view(model);\n    this.$el.prepend(view.render().el);\n    this.add(view);\n    return this;\n  };\n\n  ViewCollection.prototype.renderAll = function() {\n    this.collection.each(this.renderOne);\n    return this;\n  };\n\n  return ViewCollection;\n\n})(View);\n\nmethods = ['forEach', 'each', 'map', 'reduce', 'reduceRight', 'find', 'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke', 'max', 'min', 'sortBy', 'sortedIndex', 'toArray', 'size', 'first', 'initial', 'rest', 'last', 'without', 'indexOf', 'shuffle', 'lastIndexOf', 'isEmpty', 'groupBy'];\n\n_.each(methods, function(method) {\n  return ViewCollection.prototype[method] = function() {\n    return _[method].apply(_, [this.views].concat(_.toArray(arguments)));\n  };\n});\n\nmodule.exports = ViewCollection;\n","var Bookmark,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = Bookmark = (function(superClass) {\n  extend(Bookmark, superClass);\n\n  function Bookmark() {\n    return Bookmark.__super__.constructor.apply(this, arguments);\n  }\n\n  Bookmark.prototype.urlRoot = 'bookmarks';\n\n  Bookmark.prototype.isNew = function() {\n    return this.id == null;\n  };\n\n  Bookmark.prototype.cleanValues = function() {\n    var httpUrl, i, len, readableTags, tag, tags;\n    readableTags = \"\";\n    tags = this.attributes.tags;\n    if (typeof tags === \"string\") {\n      tags = tags.split(\",\");\n    }\n    for (i = 0, len = tags.length; i < len; i++) {\n      tag = tags[i];\n      readableTags += tag + \", \";\n    }\n    readableTags = readableTags.slice(0, readableTags.length - 2);\n    this.attributes.readableTags = readableTags;\n    httpUrl = this.attributes.url;\n    if (httpUrl.slice(0, 4) !== \"http\") {\n      httpUrl = \"http://\" + httpUrl;\n    }\n    return this.attributes.httpUrl = httpUrl;\n  };\n\n  return Bookmark;\n\n})(Backbone.Model);\n","var AppRouter,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nmodule.exports = AppRouter = (function(superClass) {\n  extend(AppRouter, superClass);\n\n  function AppRouter() {\n    return AppRouter.__super__.constructor.apply(this, arguments);\n  }\n\n  AppRouter.prototype.routes = {\n    '': function() {}\n  };\n\n  return AppRouter;\n\n})(Backbone.Router);\n","var AppRouter, AppView, Bookmark, BookmarksView, View,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nView = require(\"../lib/view\");\n\nAppRouter = require(\"../routers/app_router\");\n\nBookmarksView = require(\"./bookmarks_view\");\n\nBookmark = require(\"../models/bookmark\");\n\nmodule.exports = AppView = (function(superClass) {\n  extend(AppView, superClass);\n\n  function AppView() {\n    return AppView.__super__.constructor.apply(this, arguments);\n  }\n\n  AppView.prototype.el = \"body.application\";\n\n  AppView.prototype.events = {\n    \"click #bookmark-add-title\": \"toggleForm\",\n    \"keyup #bookmark-add-link-url\": \"showForm\",\n    \"click #bookmark-add-link-url\": \"showForm\",\n    \"click #bookmark-add-clean\": \"cleanForm\",\n    \"submit #bookmark-add\": \"bookmarkLink\",\n    \"click #bookmarks-exchange-import\": \"import\",\n    \"click #bookmarks-exchange-export\": \"export\",\n    \"change #bookmarks-exchange-file\": \"uploadFile\",\n    \"click .tag\": \"tagClick\",\n    \"click #bookmarks-tools-clean\": \"cleanSearch\",\n    \"click #bookmarks-tools-tags\": \"toggleCloud\"\n  };\n\n  AppView.prototype.template = function() {\n    return require(\"./templates/home\");\n  };\n\n  AppView.prototype.initialize = function() {\n    return this.router = CozyApp.Routers.AppRouter = new AppRouter();\n  };\n\n  AppView.prototype.toggleCloud = function() {\n    return $(\"#tags-cloud\").toggle();\n  };\n\n  AppView.prototype.cleanSearch = function() {\n    $(\"#bookmarks-tools-search\").val(\"\");\n    return window.featureList.search();\n  };\n\n  AppView.prototype.tagClick = function(evt) {\n    var tag;\n    tag = $(evt.currentTarget).text();\n    $(\"#bookmarks-tools-search\").val(tag);\n    return window.featureList.search(tag);\n  };\n\n  AppView.prototype.setTagCloud = function() {\n    var allTags, factor, i, len, nbTags, results, size, sortable, tag;\n    allTags = {};\n    nbTags = 0;\n    this.bookmarksView.collection.forEach(function(bookmark) {\n      return (bookmark.get(\"tags\")).forEach(function(tag) {\n        if (tag !== \"\") {\n          if (allTags[tag] != null) {\n            allTags[tag] += 1;\n          } else {\n            allTags[tag] = 1;\n          }\n          return nbTags += 1;\n        }\n      });\n    });\n    sortable = [];\n    for (tag in allTags) {\n      sortable.push([tag, allTags[tag]]);\n    }\n    factor = nbTags > 20 ? 1.5 : 1.0;\n    results = [];\n    for (i = 0, len = sortable.length; i < len; i++) {\n      tag = sortable[i];\n      size = 1 + factor * 10 * tag[1] / nbTags;\n      results.push($(\"#tags-cloud\").append(\"<span class='tag' title='\" + tag[1] + \" occurences' style='font-size:\" + size + \"em'>\" + tag[0] + \"</span> \"));\n    }\n    return results;\n  };\n\n  AppView.prototype.afterRender = function() {\n    $(\".url-field\").focus();\n    this.bookmarksView = new BookmarksView();\n    this.bookmarksView.$el.html('<em>loading...</em>');\n    return this.bookmarksView.collection.fetch({\n      success: (function(_this) {\n        return function() {\n          _this.bookmarksView.$el.find('em').remove();\n          window.sortOptions = {\n            \"valueNames\": [\"bookmark-title\", \"bookmark-url\", \"bookmark-tags\", \"bookmark-description\"]\n          };\n          window.featureList = new List(\"bookmarks\", window.sortOptions);\n          View.log(\"bookmarks loaded\");\n          return _this.setTagCloud();\n        };\n      })(this)\n    });\n  };\n\n  AppView.prototype.toggleForm = function(evt) {\n    var $container;\n    $container = $(\"#bookmark-add-full\");\n    $container.toggle(\"slow\");\n    return false;\n  };\n\n  AppView.prototype.showForm = function(evt) {\n    var $container;\n    $container = $(\"#bookmark-add-full\");\n    if (!$container.is(\":visible\")) {\n      this.toggleForm();\n    }\n    return false;\n  };\n\n  AppView.prototype.cleanForm = function(evt) {\n    var $form, $inputs;\n    $form = $(\"form\");\n    $inputs = $form.find(\"input, textarea\");\n    $inputs.val(\"\");\n    return false;\n  };\n\n  AppView.prototype.bookmarkLink = function(evt) {\n    var bookmark, description, tags, title, url;\n    evt.preventDefault();\n    url = $(\"#bookmark-add-link-url\").val();\n    title = $(\"#bookmark-add-link-title\").val();\n    description = $(\"#bookmark-add-link-description\").val();\n    tags = $(\"#bookmark-add-link-tags\").val().split(',').map(function(tag) {\n      return $.trim(tag);\n    });\n    if ((url != null ? url.length : void 0) > 0) {\n      bookmark = new Bookmark({\n        \"title\": title,\n        \"url\": url,\n        \"tags\": tags,\n        \"description\": description\n      });\n      this.bookmarksView.collection.create(bookmark, {\n        \"success\": (function(_this) {\n          return function() {\n            _this.cleanForm();\n            _this.toggleForm();\n            $(\".bookmark:first\").addClass(\"new\");\n            return View.log(\"\" + (title || url) + \" added\");\n          };\n        })(this)\n      });\n      console.log(bookmark)({\n        \"error\": (function(_this) {\n          return function() {\n            return View.error(\"Server error occured, \" + \"bookmark was not saved\");\n          };\n        })(this)\n      });\n    } else {\n      View.error(\"Url field is required\");\n    }\n    return false;\n  };\n\n  AppView.prototype.addBookmarkFromFile = function(link, others) {\n    var $link, bookmark, description, next, title, url;\n    $link = $(link);\n    if (!!$link.attr(\"href\").indexOf(\"place\") && !$link.attr(\"feedurl\")) {\n      url = $link.attr(\"href\");\n      title = $link.text();\n      description = \"\";\n      next = $link.parents(\":first\").next();\n      if (next.is(\"dd\")) {\n        description = next.text();\n      }\n      bookmark = new Bookmark({\n        title: title,\n        url: url,\n        tags: [],\n        description: description\n      });\n      return this.bookmarksView.collection.create(bookmark, {\n        success: (function(_this) {\n          return function() {\n            var imported;\n            imported = $(\"#bookmarks-exchange-done\");\n            if (imported.text()) {\n              imported.text(parseInt(imported.text()) + 1);\n            } else {\n              imported.text(1);\n            }\n            return _this.addBookmarkFromFile(others[0], others.slice(1));\n          };\n        })(this),\n        error: (function(_this) {\n          return function() {\n            var notImported;\n            notImported = $(\"#bookmarks-exchange-failed\");\n            if (notImported.text()) {\n              notImported.text(parseInt(notImported.text()) + 1);\n            } else {\n              notImported.text(1);\n            }\n            return _this.addBookmarkFromFile(others[0], others.slice(1));\n          };\n        })(this)\n      });\n    }\n  };\n\n  AppView.prototype.addBookmarksFromFile = function(file) {\n    var importButton, links, loaded;\n    importButton = $(\"#bookmarks-exchange-import\");\n    loaded = $(file);\n    links = loaded.find(\"dt a\");\n    this.addBookmarkFromFile(links[0], links.slice(1));\n    return importButton.removeClass(\"doing\");\n  };\n\n  AppView.prototype.uploadFile = function(evt) {\n    var file, importButton, reader;\n    importButton = $(\"#bookmarks-exchange-import\");\n    if (importButton.hasClass(\"doing\")) {\n      return View.error(\"I'm working!\");\n    } else {\n      file = evt.target.files[0];\n      if (file.type !== \"text/html\") {\n        View.error(\"This file cannot be imported\");\n        return;\n      }\n      importButton.addClass(\"doing\");\n      reader = new FileReader();\n      reader.onload = (function(_this) {\n        return function(evt) {\n          return _this.addBookmarksFromFile(evt.target.result);\n        };\n      })(this);\n      return reader.readAsText(file);\n    }\n  };\n\n  AppView.prototype[\"import\"] = function(evt) {\n    return View.confirm(\"Import html bookmarks file exported by \" + \"firefox or chrome\", function() {\n      return $(\"#bookmarks-exchange-file\").click();\n    });\n  };\n\n  AppView.prototype[\"export\"] = function(evt) {\n    return window.location = \"export\";\n  };\n\n  return AppView;\n\n})(View);\n","var BookmarkView, View,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nView = require(\"../lib/view\");\n\nmodule.exports = BookmarkView = (function(superClass) {\n  extend(BookmarkView, superClass);\n\n  BookmarkView.prototype.className = \"bookmark\";\n\n  BookmarkView.prototype.tagName = \"li\";\n\n  BookmarkView.prototype.events = {\n    \"click .bookmark-delete\": \"deleteBookmark\",\n    \"mouseenter .bookmark-delete\": \"setToDelete\",\n    \"mouseleave .bookmark-delete\": \"setToNotDelete\"\n  };\n\n  function BookmarkView(model) {\n    this.model = model;\n    BookmarkView.__super__.constructor.call(this);\n  }\n\n  BookmarkView.prototype.template = function() {\n    var template;\n    template = require(\"./templates/bookmark\");\n    return template(this.getRenderData());\n  };\n\n  BookmarkView.prototype.render = function() {\n    this.model.cleanValues();\n    return BookmarkView.__super__.render.call(this);\n  };\n\n  BookmarkView.prototype.setToDelete = function() {\n    return this.$el.addClass(\"to-delete\");\n  };\n\n  BookmarkView.prototype.setToNotDelete = function() {\n    return this.$el.removeClass(\"to-delete\");\n  };\n\n  BookmarkView.prototype.deleteBookmark = function() {\n    var title;\n    title = this.$el.find(\".bookmark-title\").html();\n    $(\"#bookmark-add-link-url\").val(this.$el.find(\".bookmark-title a\").attr(\"href\"));\n    $(\"#bookmark-add-link-title\").val(this.$el.find(\".bookmark-title a\").text());\n    $(\"#bookmark-add-link-tags\").val(this.$el.find(\".bookmark-tags span\").text());\n    $(\"#bookmark-add-link-description\").val(this.$el.find(\".bookmark-description p\").text());\n    $(\"#bookmark-add-full\").show();\n    return this.model.destroy({\n      success: (function(_this) {\n        return function() {\n          _this.destroy();\n          window.featureList.remove(\"bookmark-title\", title);\n          return View.log(\"\" + title + \" removed and placed in form\");\n        };\n      })(this),\n      error: (function(_this) {\n        return function() {\n          return View.error(\"Server error occured, bookmark was not deleted.\");\n        };\n      })(this)\n    });\n  };\n\n  return BookmarkView;\n\n})(View);\n","var BookmarkCollection, BookmarkView, BookmarksView, ViewCollection,\n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nViewCollection = require('../lib/view_collection');\n\nBookmarkView = require('./bookmark_view');\n\nBookmarkCollection = require('../collections/bookmark_collection');\n\nmodule.exports = BookmarksView = (function(superClass) {\n  extend(BookmarksView, superClass);\n\n  function BookmarksView() {\n    this.renderOne = bind(this.renderOne, this);\n    return BookmarksView.__super__.constructor.apply(this, arguments);\n  }\n\n  BookmarksView.prototype.el = '#bookmarks ul';\n\n  BookmarksView.prototype.view = BookmarkView;\n\n  BookmarksView.prototype.renderOne = function(model) {\n    var sortObj, view;\n    view = new this.view(model);\n    this.$el.prepend(view.render().el);\n    this.add(view);\n    if (window.featureList) {\n      sortObj = {\n        \"el\": view.el,\n        \"values\": window.sortOptions.valueNames\n      };\n      window.featureList.add(sortObj);\n    }\n    return this;\n  };\n\n  BookmarksView.prototype.initialize = function() {\n    return this.collection = new BookmarkCollection(this);\n  };\n\n  return BookmarksView;\n\n})(ViewCollection);\n","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div class=\"buttons\"><button title=\"Remove this link from saved bookmarks and place its details into the form\" class=\"bookmark-delete glyphicon glyphicon-share\"></button></div><div class=\"bookmark-link\">');\nif ( model.title)\n{\nbuf.push('<div class=\"bookmark-title\"><a');\nbuf.push(attrs({ 'href':(\"\" + (model.httpUrl) + \"\"), 'target':(\"_blank\") }, {\"href\":true,\"target\":true}));\nbuf.push('>' + escape((interp = model.title) == null ? '' : interp) + '</a></div><div class=\"bookmark-url\"><a');\nbuf.push(attrs({ 'href':(\"\" + (model.httpUrl) + \"\"), 'target':(\"_blank\") }, {\"href\":true,\"target\":true}));\nbuf.push('>' + escape((interp = model.url) == null ? '' : interp) + '</a></div>');\n}\nelse\n{\nbuf.push('<div class=\"bookmark-title\"><a');\nbuf.push(attrs({ 'href':(\"\" + (model.httpUrl) + \"\"), 'target':(\"_blank\") }, {\"href\":true,\"target\":true}));\nbuf.push('>' + escape((interp = model.url) == null ? '' : interp) + '</a></div>');\n}\nbuf.push('</div>');\nif ( model.description || model.readableTags)\n{\nbuf.push('<div class=\"bookmark-description box\">');\nif ( model.readableTags)\n{\nbuf.push('<div class=\"bookmark-tags\"><span>' + escape((interp = model.readableTags) == null ? '' : interp) + '</span></div>');\n}\nif ( model.description)\n{\nbuf.push('<p>' + escape((interp = model.description) == null ? '' : interp) + '</p>');\n}\nbuf.push('</div>');\n}\n}\nreturn buf.join(\"\");\n};","module.exports = function anonymous(locals, attrs, escape, rethrow, merge) {\nattrs = attrs || jade.attrs; escape = escape || jade.escape; rethrow = rethrow || jade.rethrow; merge = merge || jade.merge;\nvar buf = [];\nwith (locals || {}) {\nvar interp;\nbuf.push('<div id=\"content\"><div id=\"bookmarks-exchange\"><input id=\"bookmarks-exchange-file\" type=\"file\" name=\"exchange-file\"/><button id=\"bookmarks-exchange-import\" title=\"Import html bookmarks files exported from your browser\" class=\"glyphicon glyphicon-upload\"></button><button id=\"bookmarks-exchange-export\" title=\"Export bookmarks in html\" class=\"glyphicon glyphicon-download\"></button><div id=\"bookmarks-exchange-done\"></div><div id=\"bookmarks-exchange-failed\"></div></div><form id=\"bookmark-add\" class=\"box\"><div id=\"bookmark-add-title\" title=\"Toggle full bookmark form\">Bookmark a link</div><input id=\"bookmark-add-link-url\" placeholder=\"url\"/><div id=\"bookmark-add-full\"><input id=\"bookmark-add-link-title\" placeholder=\"title\"/><textarea id=\"bookmark-add-link-description\" placeholder=\"description\"></textarea><input id=\"bookmark-add-link-tags\" placeholder=\"tags, separated by \\',\\'\"/><div id=\"bookmark-add-buttons\"><button id=\"bookmark-add-add\" title=\"Save the bookmark\" class=\"glyphicon glyphicon-ok-circle\"></button><button id=\"bookmark-add-clean\" title=\"Clear the form\" class=\"glyphicon glyphicon-remove-circle\"></button></div></div></form><div id=\"bookmarks\" class=\"box\"><div id=\"bookmarks-tools\"><input id=\"bookmarks-tools-search\" placeholder=\"search\" class=\"search\"/><button id=\"bookmarks-tools-clean\" title=\"Clear search field\" class=\"glyphicon glyphicon-remove-circle\"></button><button id=\"bookmarks-tools-tags\" title=\"Toggle tags cloud\" class=\"glyphicon glyphicon-tags\"></button><button id=\"bookmarks-tools-sort\" title=\"Sort links\" data-sort=\"bookmark-title\" class=\"glyphicon glyphicon-sort sort\"></button><div id=\"tags-cloud\"> </div></div><ul class=\"list\"></ul></div></div>');\n}\nreturn buf.join(\"\");\n};"]}